## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/

# Visual Studio 2015 cache/options directory
.vs/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# DNX
project.lock.json
artifacts/

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
## TODO: Comment the next line if you want to checkin your
## web deploy settings but do note that will include unencrypted
## passwords
#*.pubxml

*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config

# Windows Azure Build Output
csx/
*.build.csdef

# Windows Store app package directory
AppPackages/

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
orleans.codegen.cs

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# LightSwitch generated files
GeneratedArtifacts/
_Pvt_Extensions/
ModelManifest.xml
/InvertedLinks/PLD-out-graph.dat
/InvertedLinks/PLD-map.dat
/InvertedLinks/merge93
/InvertedLinks/merge92
/InvertedLinks/merge91
/InvertedLinks/merge90
/InvertedLinks/merge9
/InvertedLinks/merge89
/InvertedLinks/merge88
/InvertedLinks/merge87
/InvertedLinks/merge86
/InvertedLinks/merge85
/InvertedLinks/merge84
/InvertedLinks/merge83
/InvertedLinks/merge82
/InvertedLinks/merge81
/InvertedLinks/merge80
/InvertedLinks/merge8
/InvertedLinks/merge79
/InvertedLinks/merge78
/InvertedLinks/merge77
/InvertedLinks/merge76
/InvertedLinks/merge75
/InvertedLinks/merge74
/InvertedLinks/merge73
/InvertedLinks/merge72
/InvertedLinks/merge71
/InvertedLinks/merge70
/InvertedLinks/merge7
/InvertedLinks/merge69
/InvertedLinks/merge68
/InvertedLinks/merge67
/InvertedLinks/merge66
/InvertedLinks/merge65
/InvertedLinks/merge64
/InvertedLinks/merge63
/InvertedLinks/merge62
/InvertedLinks/merge61
/InvertedLinks/merge60
/InvertedLinks/merge6
/InvertedLinks/merge59
/InvertedLinks/merge58
/InvertedLinks/merge57
/InvertedLinks/merge56
/InvertedLinks/merge55
/InvertedLinks/merge54
/InvertedLinks/merge53
/InvertedLinks/merge52
/InvertedLinks/merge51
/InvertedLinks/merge50
/InvertedLinks/merge5
/InvertedLinks/merge49
/InvertedLinks/merge48
/InvertedLinks/merge47
/InvertedLinks/merge46
/InvertedLinks/merge45
/InvertedLinks/merge44
/InvertedLinks/merge43
/InvertedLinks/merge42
/InvertedLinks/merge41
/InvertedLinks/merge40
/InvertedLinks/merge4
/InvertedLinks/merge39
/InvertedLinks/merge38
/InvertedLinks/merge37
/InvertedLinks/merge36
/InvertedLinks/merge35
/InvertedLinks/merge34
/InvertedLinks/merge33
/InvertedLinks/merge32
/InvertedLinks/merge31
/InvertedLinks/merge30
/InvertedLinks/merge3
/InvertedLinks/merge29
/InvertedLinks/merge28
/InvertedLinks/merge27
/InvertedLinks/merge26
/InvertedLinks/merge25
/InvertedLinks/merge24
/InvertedLinks/merge23
/InvertedLinks/merge22
/InvertedLinks/merge21
/InvertedLinks/merge20
/InvertedLinks/merge2
/InvertedLinks/merge19
/InvertedLinks/merge18
/InvertedLinks/merge17
/InvertedLinks/merge16
/InvertedLinks/merge15
/InvertedLinks/merge14
/InvertedLinks/merge13
/InvertedLinks/merge12
/InvertedLinks/merge11
/InvertedLinks/merge10
/InvertedLinks/merge1
/InvertedLinks/output.txt
